{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:Describe*",
                "ec2:DetachVolume",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume",
                "ec2:RevokeSecurityGroupIngress",
                "elasticloadbalancing:Describe*",
                "kms:DescribeKey"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ReadPermissions",
            "Effect": "Allow",
            "Action": [
              "elasticloadbalancing:DescribeTargetGroups"
            ],
            "Resource": [
              "*"
            ]
        },
        {
            "Sid": "LoadBalanacerManagementResourceTag",
            "Effect": "Allow",
            "Action": [
              "elasticloadbalancing:ModifyTargetGroup",
              "elasticloadbalancing:DeleteListener", //Part of role/ManagedOpenShift-Installer-Role
              "elasticloadbalancing:CreateLoadBalancerListeners", 
              "elasticloadbalancing:DeleteLoadBalancerListeners", 
              "elasticloadbalancing:ModifyListener",  //Testing needed. I can do it with myself but wont be able to do as controlplane
              "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",       //Testing needed   
              "elasticloadbalancing:DeleteTargetGroup",
              "elasticloadbalancing:ModifyTargetGroupAttributes", //Part of role/ManagedOpenShift-Installer-Role
              "elasticloadbalancing:CreateTargetGroup",
              "elasticloadbalancing:AttachLoadBalancerToSubnets",
              "elasticloadbalancing:DetachLoadBalancerFromSubnets", //Testing needed. I can do it with myself but wont be able to do as controlplane
              "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer" 
            ],
            "Resource": [
              "*"
            ],
            "Condition": {
              "StringEquals": {
                "aws:ResourceTag/red-hat-managed": "true"
              }
            }
        },
        {
            "Sid": "LoadBalanacerManagement",
            "Effect": "Allow",
            "Action": [
              "elasticloadbalancing:AddTags",
              "elasticloadbalancing:ConfigureHealthCheck",
              "elasticloadbalancing:CreateLoadBalancerPolicy",
              "elasticloadbalancing:DeleteLoadBalancer",
              "elasticloadbalancing:DeregisterInstancesFromLoadBalancer", //Testing needed. I can do it with myself but wont be able to do as controlplane
              "elasticloadbalancing:ModifyLoadBalancerAttributes",
              "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
              "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
            ],
            "Resource": [
              "*"
            ]
        },
        {
            "Sid": "CreateLoadBalancer",
            "Effect": "Allow",
            "Action": [
              "elasticloadbalancing:CreateLoadBalancer"
            ],
            "Resource": [
              "arn:aws:elasticloadbalancing:*:*:loadbalancer/*"
            ],
            "Condition": {
              "StringEquals": {
                "aws:RequestTag/red-hat-managed": "true"
              }
            }
        },
        {
            "Sid": "CreateListeners",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:CreateListener"
            ],
            "Resource": [
                "*"
            ],
            "Condition": {
                "StringEquals": {
                    "aws:RequestTag/red-hat-managed": "true",
                    "aws:ResourceTag/red-hat-managed": "true"
                }
            }
        },
        {
            "Sid": "TargetRegisterDeregister",
            "Effect": "Allow",
            "Action": [
              "elasticloadbalancing:RegisterTargets",
              "elasticloadbalancing:DeregisterTargets"  //Part of role/ManagedOpenShift-Installer-Role
            ],
            "Resource": [
                "*"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/red-hat-managed": "true"
                }
              }
        }
    ]
}